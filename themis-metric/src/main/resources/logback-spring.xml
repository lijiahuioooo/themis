<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">


    <springProperty name="LOG_DIR" source="log.dir" scope="context"/>
    <springProperty name="APP_NAME" source="spring.application.name" scope="context"/>
    <springProperty name="ROOT_LEVEL" source="log.root.level" scope="context"/>
    <springProperty name="ROOT_APPENDER_FILTER_LEVEL" source="${log.appender.root.filter.level}" scope="context"/>
    <springProperty name="PROFILE" source="profile" scope="context" />

    <property name="LOG_PATTERN"
              value="[%d{&quot;yyyy-MM-dd'T'HH:mm:ss,SSSXXX&quot;}][${PROFILE}][%level][%thread][%X{traceId}] %logger{20} - %m%n"/>
    <property name="LOG_FILE" value="${LOG_DIR}"/>
    <property name="MAX_HISTORY" value="7"/>
    <property name="LOG_ENV" value="${PROFILE}"/>

    <!-- root logger -->
    <if condition='property("LOG_ENV").contains("prod") || property("LOG_ENV").contains("dev") || property("LOG_ENV").contains("test")'>
        <then>
            <appender name="rootAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
                <file></file>
                <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
                    <level>${ROOT_APPENDER_FILTER_LEVEL}</level>
                </filter>
                <encoder charset="UTF-8"
                         class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
                    <providers>
                        <mdc/>
                        <timestamp>
                            <timeZone>UTC</timeZone>
                        </timestamp>
                        <pattern>
                            <pattern>
                                {
                                "profile":"${PROFILE}",
                                "level": "%level",
                                "trace": "%X{X-B3-TraceId:-}",
                                "span": "%X{X-B3-SpanId:-}",
                                "parent": "%X{X-B3-ParentSpanId:-}",
                                "thread": "%thread",
                                "class": "%logger{40}",
                                "message": "%message%exception{40}"

                                }
                            </pattern>
                        </pattern>
                    </providers>
                </encoder>
                <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                    <fileNamePattern>${LOG_FILE}%d{yyyy-MM-dd}.log</fileNamePattern>
                    <maxHistory>${MAX_HISTORY}</maxHistory>
                </rollingPolicy>

            </appender>

            <appender name="asyncRootAppender" class="ch.qos.logback.classic.AsyncAppender">
                <appender-ref ref="rootAppender" />
                <queueSize>1024</queueSize>
                <neverBlock>true</neverBlock>
            </appender>
        </then>
    </if>

    <!-- Result trace logger -->
    <if condition='property("LOG_ENV").contains("prod") || property("LOG_ENV").contains("dev") || property("LOG_ENV").contains("test")'>
        <then>
            <appender name="traceAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
                <file></file>
                <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
                    <level>${ROOT_APPENDER_FILTER_LEVEL}</level>
                </filter>
                <encoder charset="UTF-8"
                        class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
                    <providers>
                        <timestamp>
                            <timeZone>UTC</timeZone>
                        </timestamp>
                        <pattern>
                            <pattern>
                                {
                                "level": "%level",
                                "thread": "%thread",
                                "class": "%logger{40}",
                                "app_id": "%X{app_id}",
                                "app_metric_id": "%X{app_metric_id}",
                                "source_type": "%X{source_type}",
                                "expect_start_time": "%X{expect_start_time}",
                                "result": "%X{result}",
                                "message": "%message%exception{40}"
                                }
                            </pattern>
                        </pattern>
                    </providers>
                </encoder>
                <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                    <fileNamePattern>${LOG_FILE}result-%d{yyyy-MM-dd}.log</fileNamePattern>
                    <maxHistory>${MAX_HISTORY}</maxHistory>
                </rollingPolicy>

            </appender>

            <appender name="asyncTraceAppender" class="ch.qos.logback.classic.AsyncAppender">
                <appender-ref ref="traceAppender" />
                <queueSize>1024</queueSize>
                <neverBlock>true</neverBlock>
            </appender>
        </then>
    </if>
    <!-- 控制台输出 -->
    <appender name="stdoutAppender" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <root>
        <level value="${ROOT_LEVEL}" />
        <if condition='property("LOG_ENV").contains("prod") || property("LOG_ENV").contains("test")'>
            <then>
                <appender-ref ref="asyncRootAppender" />
            </then>
        </if>
        <appender-ref ref="stdoutAppender" />
    </root>

    <logger name="com.mfw.themis.metric.manager.MetricExecuteManager" level="INFO" additivity="false">
        <if condition='property("LOG_ENV").contains("prod") || property("LOG_ENV").contains("dev") || property("LOG_ENV").contains("test")'>
            <then>
                <appender-ref ref="asyncTraceAppender" />
            </then>
        </if>
    </logger>

</configuration>
